name: Test deployment

on:
  pull_request:
    branches:
      - main
    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

jobs:
  build:
    name: Test deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Install dependencies
        run: npm ci
      - name: Test build website
        run: npm run build
        env:
          INKEEP_API_KEY: ${{ secrets.INKEEP_API_KEY }}
          INKEEP_INTEGRATION_ID: ${{ secrets.INKEEP_INTEGRATION_ID }}
          INKEEP_ORGANIZATION_ID: ${{ secrets.INKEEP_ORGANIZATION_ID }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          
  #     - name: Upload Build Artifact
  #       uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: build                                        
  # deploy:
  #   name: Deploy to GitHub Pages
  #   needs: build

  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   permissions:
  #     pages: write # to deploy to Pages
  #     id-token: write # to verify the deployment originates from an appropriate source

  #   # Deploy to the github-pages environment
  #   environment:
  #     name: github-pages-preview
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4

  #     - name: Add deployment URL as comment on PR
  #       uses: actions/github-script@v7
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const { context, github } = require('@actions/github');
  #           const prNumber = context.payload.pull_request.number;
  #           const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
  #           const commentBody = `Preview URL: ${deploymentUrl}`;
  #           github.issues.createComment({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             issue_number: prNumber,
  #             body: commentBody
  #           });